sudo: required
dist: trusty
group: travis_latest

services:
  - docker

language: node_js

os:
  - linux
  - osx

osx_image: xcode8.3

node_js:
  - '6'
  - '8'
  - '10'

env:
  global:
    - CI_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
    - secure: "KPf6trtYLBDc2S/fF7H4VkNOAQ2Gc9sFj3v8aHOhNWDagACEHaPjIZdr3MGmzXji2EyQqtm6SxBxzdMbe1BNY5GRALgGI2fSyra+VwjhUeOB/UJ8oZuxhqnywbF77lbZgUYK/kOWHgCKGQxRsVZyytgK2CihOwPwzSp/CWUhBjlyjtDpUOMJXfc0USg05imR9LcwdW9o84uXGyI3XwHhqsA5szlu09Oxz+O//TMCHobb8o9b13N8Oxhdu9mgzynXCEo7TG4rwbmx2t7ymfM0TfEqfEsOOQ/A7iPJ4lxQ+FKGoKaqfITuZtUmzd4RaCK8zRVg/dYbXX2qF/RWRBKwIAfBLNLYYdFxleaBaNgGGyQw8TpNkm80u5ilmIDCrw79m0MqePZXcL4pdfRC9PBE2PO55tX/Podhk9HKovixvB4qxUj3Y45ORtSE2TO78W3Cs54JTQVNh4xz8Tzp67DWwNXN5XnwkVyvRugaCHV1gUuJWuJTUr6Bdoad9vid+GUKqNoBlTTgkjfc0/TDSuDFnAbnhdga4xFoFLnpTDpCaZrr1NWfhVCepGqY7I4qLcie/Bobpr6n8UuBRg6devdcBZJxAYKyC4SkfqfkJe36TmTViz7GCs698CAPteJ2ypifeERT9zYu0JYeofEi49bPxevaaFICxzUE2WIAlGeGIw0=" # DOCKER_EMAIL
    - secure: "Xh5xnUckiGwr3pcl44c8A91p2AyhJXMpGzDPpTk+63ZeM0nDnUh1/1StqW+5Bfx24MI6HtkOiGa7zTn8HbDMWXVN7s+eZ0eC28GI63EsKyivsMyylR+mwMKsAHcxbfZvFaDJiYE/s1FXXVdIr3PpNVxlncbuZiTQ+i+sr4iD+B14UV+GTwgbpyNEF2jSK+MlV0XAn6AK4kc6fd3Zx2guG9Kv8slwFcK7Kwjpa4C+t0ZX85wiqlPBhC42nhx6eRUwWbf/4rySd/4RhHXan+zsBWBjUHLhjzMvwsahqPg0yBzkFoZ3ozUQqv9NhmyjEANCAAj1vcOoFZ0nikgfR1WqeMEcKfTFbV0QVfqnEyYHN2ZUmvOzv2gih26gHaY7E2Dte6u96CSv5TgwYtiCBZzc0vHO8p2+heLfourhqdQhanElq4nthBffKJled5dOcq6UAINK85ZwzS+7EZG79idGETR7vvCiaLLuhCn4kFdo1fLOCTQ+FJAOYw3uSk6n1YlNbxNJ7RwykgRB/9MgbJHc9o67C/Y3NEzBRErSctqfZ9Rg6gICM8dkwoBh0652FDn4E/TCkpfKbpTkRkJoFzRxe9joFTYvkt+fIYwokyajgt/qlpb6XQiFiUqdlWcWcYDNbBSnIMfH4L61ktMtCCcv85Iw98d1bxi93r/UdyhWOuQ=" # DOCKER_USER
    - secure: "vthH2fNi44W4+21OxLnmeb41y9T+v5p4vpWgj5DG/LuVfJNw5fNvnitXdwe3UR0EQCvH0ow4mn4I2avqvn5G6PSDmgpzTHcw8OJt/cGhXXsN629tdccG+rHG8xFneRACnSJOmZ3rU038igAlZt7PdraM68ZVdwZfXEDua06qb4FODBWNZtiUJ89AyYib5DoYjde18sEHqNZEp1ruhcfZArzexnxJ7G63Qe3SmxBS5Z7jC18sGyTI3FbUyKUlqYsxG8rcqTy5QOKa6Y0P1TPPHmr517uO4YfxhQX6Lcrn+DgvHH/n6pzlBeGgXm5XZB+MN6iRM8NRo1VmQ8Ecm3sFb6UZvESB0wx3EI5DPde/rxE6fwhTP/d+95qSrZUvuqLOGfa6Zb5JsgKzK4St2EVb6hs5qqTnIifGZQZ4NJrhTe737kE4FsJbK8dQmNMwMlNVbCmnYeZmWh3aJgXp4fjk/RyomFvfGLjNchVIM6iZw2DlqLJm2Wl4Dsb1blj4tfuL0+UlA9YiF2V6ycn5sWdq5JiGsWhkyARnCiSFc5lu6TbvKt8k5CQIwZXshoKyv8IIQkEubGVQRI9D8nDrgrbOt8+lIEU6Ibfbi1CzuPpv95GodWLCEyf6KXf8EHr+tEbKPwpbNzIsPWEqMuPQ6F3AWtGnuuAvfLm/5+/OXNKxT3o=" # DOCKER_PASS
    - secure: "BAiWc6AblNednsnoh2+3OMW81MVzCQPR0UT3E2/gCdScw8Q9C4a8fC0OpXxJOqHy9JgAL3s5kxZVlAbUhBwXJlarDyQl++Y9aeKjr6J0+iVXu3cSF0cUw+rYbQ41u3dFmF3Sa0K5Lo0uB5XX/ximCX8RzgUJ6B79Jh1ac9FbZrYBth6Ovnsy3Us9VvxB8jXI2St6GJgewmXUo8qlWZKClM79NPBjwpboU09zSGhqQ32JssHUjw/peLt6x4SGV+NsMNgSNELXxVVbBBp7Wp5PNJY8D5vhO703Ka2WLJEebZnE+7r5j1VzLO1/OGrOS9QwVzw/fZEhQYST4NZPMu65bR7VI8jwJN2OjIcUx3yH0JbSXmPtdANofusIozGHKvg7odLTSo3js5crFnDBuoP3ZQ8XNusse2smbyd5snUCb0g9FsEzlQLQZBfcubuW3qY5BZwbCyc2e9WoNOLt4C83rcaFuRER5sK/UG9nSGivIsSKOCJpacdIxmCEvZV8h5YUd/OQqTMbFA2YliaLGt7AsfJrR8W4wy+vB12pVEEg7xPK+TnhzhCK61JGOn/pjVmFjUb0zHgcJEry3C5W+J2TEwKxRIEgkLCL7YP3WnE4c5fcqg2c9B4SHOqReO0KEx5mP0FVlGliW69ZHoUPoEC+VTwVzMJheOTnpzXNh4puh1E=" # GITHUB_TOKEN
#    - secure: "zn6ZQM7LFgFcwFNqcbhBGY9DYZzw3tOa3puTntdcEfnMsp+ikcJSYl8lvTj1TL1rvZIAJfO896Uk79HTyJtv06a9LjpEElaQvkBEtPGnE0fdGWLgK1cl0JBxPNEDicAoYrUV2QkuuwaTtpKeUsnD6XmWSzzpqmZKDLfRyO1xwHyvH4aTvqAhDXM7Hb+Hae4Nk7ZCq5v1CwScu6gdaJMBPdcmWBzAPNnAJYbDilw3fFdfOrxhuTagmmBQFn99iaIRbLR4sTuI/c53NMUS8FJyfistTVVuMOFTSdFvlQ/Ikm6PbIYYIMDp9RetGIJk7IL4U18LpwACzhjc25SvWrQXPI7eiW0H3uD8rGPtR50cBrbxRI/Of7271eqXvtNMzHSsCo0ENQ1qYWoF5OhI4roklAfZjQpdi7Ngg+EPNIgf24vpf0fI9u8caOHxzAYjrwdcXCLTmcu0ANuQMMXP5G7mBZG5/kGzC5cpc11uqwINCU10rVQa7JVNuFNhuT98/c+DSeBY92w9nEsCshG1AKcNjY677FbBdVS+DCPPRjiAfjomT9Ma8VqR/bGCogzaEaA7adUbGLGI9V397QF9gSrzyBP/zjOiYVX1mRjylmEitdQtXF3CXsbhrOOCenDifKHhtnOgXgpObcbwV4B82VhGzDOvTxF2n+QTGhUAA/Okyv8=" # CSC_LINK
#    - secure: "LenBHoTcLW6cF7ML3+dB7JICMzEkawrJHiqFcGSo+hgapB0NCHGUiihr2zrjGSlHmElPiQ2TCnCRmPvOzVfpZswg36D0+1niPgZ+0vfGfPEoPmHhlvIsMPLb7v0lCIeh8z2o9eNbSvnv6NRXS4o5NLlHzM+RhAYARSXvRmFxqCCBn1Sj9pB5TB9NX3mK0Lb3mEJcIgEVFBr/xLiISPUBGFmncHUpxYjZHwxXQXRcGyfOEphLM9tvmEdoILRxM67k035csAIeaLKKPJcMGmO0e/JwZacQN7s3MhD2M8NddhQvWklNjabXAJ0L9Ycujf6rI5RsGcZL2U80HKr0aYRMiVW7/MPMpLARFOUoLfuFAXKkkLHp7Lbb1W6Zftr4yxkrfDXIQsh976HkBj+czr6wGwzBwb39zX4KEm/Yc3TEIxC/kKs9bt+vVW6BG+J41neiDiuIY1D1tRA0OEq0j04zpU6n683ojfYddzFoUWCN+TB3i0HQxWsKTOGKdcQwrJs7xZ4//UzD/vOTHj18SH0nm6ImF2/7q+9wJO646gHWTGTjGFYdupuR402wb3h5vWmGfFRvX6B1QtYImmEwMFnqf2XRwTTSz3niKn2Rt1YUiCP5bEz+Dcr+e+A8Jidt6ZuJEXv5SbykTG4YBmgCuuFT5KRwv08kule7FiUtQ2KD5XE=" # CSC_KEY_PASSWORD

cache:
  directories:
    - $HOME/.electron

addons:
  apt:
    packages:
      - icnsutils
      - graphicsmagick
      - gcc-multilib
      - g++-multilib

before_install:
  - git --version
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  #
  # https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build#os-x
  #
  # Use brew to install required packages.
  #
  # To build app in distributable format for Windows on OS X:
  # $ brew install Caskroom/cask/xquartz wine mono
  #
  # To build app in distributable format for Linux on OS X:
  # $ brew install ruby gnu-tar libicns graphicsmagick
  #
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
    fi
  - npm install -g npm
  - npm --version

install: travis_wait 40 npm install

before_script:
  - COMMIT_LOG=`git log -1 --format='%ci %H %s'`
  - echo "$COMMIT_LOG"

script:
  - |
    if [[ -z "$TRAVIS_TAG" ]]; then
      npm run build-latest
    else
      npm run build
    fi

after_success:
  - PACKAGE_NAME=`node -e "console.log(require('./src/package.json').name)"`
  - PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
  - PRODUCT_NAME=CNCjs
  - RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
  - echo "$PACKAGE_NAME"
  - echo "$PACKAGE_VERSION"
  - echo "$PRODUCT_NAME"
  - echo "$RELEASE"
  - npm run coveralls
  - mkdir -p releases
  - |
    # build:mac-x64
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "osx" ]]; then
      # https://github.com/electron-userland/electron-builder/issues/398
      security import "scripts/certs/Certum-Code-Signing-CA-SHA2.cer" -k ~/Library/Keychains/login.keychain -T /usr/bin/codesign;
      # https://github.com/electron-userland/electron-osx-sign/issues/83
      # Temporarily Bypass Gatekeeper
      sudo spctl --master-disable;
      sudo spctl --status;
      npm run build:mac-x64;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}.dmg" "releases/${RELEASE}-mac-x64.dmg";
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-mac-x64.dmg";
        npm run github-release -- upload \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-mac-x64.dmg";
        rm -f "releases/${RELEASE}-mac-x64.dmg";
      fi
    fi
  - |
    # build:linux-ia32
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-ia32;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME} ${PACKAGE_VERSION} i386.AppImage" "releases/${RELEASE}-linux-i386.AppImage";
      cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_i386.deb" "releases/${RELEASE}-linux-i386.deb";
      pushd releases;
      ln -sf ../output/linux-ia32-unpacked "${RELEASE}-linux-ia32";
      tar zcfh "${RELEASE}-linux-ia32.tar.gz" "${RELEASE}-linux-ia32";
      rm -f "${RELEASE}-linux-ia32";
      popd;
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-linux-i386.AppImage" \
          "*-linux-i386.deb" \
          "*-linux-ia32.tar.gz";
        npm run github-release -- upload \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-i386.AppImage" \
          "releases/${RELEASE}-linux-i386.deb" \
          "releases/${RELEASE}-linux-ia32.tar.gz";
        rm -f "releases/${RELEASE}-linux-i386.AppImage";
        rm -f "releases/${RELEASE}-linux-i386.deb";
        rm -f "releases/${RELEASE}-linux-ia32.tar.gz";
      fi
    fi
  - |
    # build:linux-x64
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-x64;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME} ${PACKAGE_VERSION}.AppImage" "releases/${RELEASE}-linux-x86_64.AppImage";
      cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_amd64.deb" "releases/${RELEASE}-linux-amd64.deb";
      pushd releases;
      ln -sf ../output/linux-unpacked "${RELEASE}-linux-x64";
      tar zcfh "${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64";
      rm -f "${RELEASE}-linux-x64";
      popd;
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-linux-x86_64.AppImage" \
          "*-linux-amd64.deb" \
          "*-linux-x64.tar.gz";
        npm run github-release -- upload \
          --owner=cncjs \
          --repo=cncjs \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-x86_64.AppImage" \
          "releases/${RELEASE}-linux-amd64.deb" \
          "releases/${RELEASE}-linux-x64.tar.gz";
        rm -f "releases/${RELEASE}-linux-x86_64.AppImage";
        rm -f "releases/${RELEASE}-linux-amd64.deb";
        rm -f "releases/${RELEASE}-linux-x64.tar.gz";
      fi
    fi
  - |
    # docker image
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      travis_wait 40 scripts/travis-docker-build.sh;
    fi

before_deploy:
  - echo "Deploying to GitHub releases"
deploy:
  provider: releases
  api_key:
    secure: "nIhLqo+6i/uI0FgneK5nPvzYMEGO0ch7K1kbae/W/DqInqoT+moEAa16vHko3NR4SouICAEuT2GwiP/NdL7V3LZNOBOHmGa9iysBlxH8JU2AgDJiv2daXMTgGmVV7hl2sII5a8utVRFecVjZNJ+EecbU067y9S3gHbsrFlWwdUbLIpVM5+jr0YuXpV949OW8770MKLqvSONL4QoDJD7exNJ77TcHIFZURsr0VSK7rEhCDJhcUzrcn/mXLtVbAJwpBJXPMSj0lObMt1NvaQ6/iQL/rNCv5LYBOhRc0tZaBNRq8xJGR71mA35Vcrt50EP/fFakqdg3n59yO4K26C7GCHEiddlhjFKO1j9ul/98PZ4okw2FBFy1pChNuzme02tguLN85wzKSFERaCbBiNvWvR5MMEWlSuewFKojkbEqSDpZTRvyc6ct/KkvXBr1JXemfH3Uc3ANwNKcuB7566NtN29ogzOJHF/P3OEUy7ny19CZp55kVOKEeCCO3LtubaBwn+S9fP0aKCUC0Q8uHWy1Pfi8iG4XZs+jhPmwj+8OFP4DTBZMR9evk7Iq8/rMYL0WfsDuvbFygyEPWpduJ2YIl31z+7kN0OxQdCwHbNZcxP0n3ieIuNa0K74qfpL6mn0ZaLB1wA7fW/dTc9tF9lMsS577hKGcDwoZPm9VfQ+sVic="
  file_glob: true
  file:
    - 'releases/*.*'
  overwrite: true
  skip_cleanup: true
  on:
    # https://docs.travis-ci.com/user/deployment#Conditional-Releases-with-on
    tags: true  # Deploy app only when a tag is applied to the commit
    node: '10'
